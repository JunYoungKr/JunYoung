-- ONLINE_SALE // ONLINE_SALE_ID, USER_ID, PRODUCT_ID, SALES_AMOUNT, SALES_DATE
-- OFFLINE_SALE// OFFLINE_SALE_ID,         PRODUCT_ID, SALES_AMOUNT, SALES_DATE

-- 오프라인의 경우 회원 번호가 없으므로 NULL로 처리
-- 판매일을 기준으로 오름차순 정렬, SALES_AMOUNT
-- 판매일이 같다면 상품 ID를 기준으로 오름차순, PRODUCT_ID
-- 상품 ID까지 같다면 유저 ID를 기준으로 오름차순 정렬, USER_ID

-- 온라인과 오프라인의 차이점이라면 오프라인에는 USER_ID가 없는 것인데 이걸 어떻게 처리할 것인지?
-- NULL을 어떻게 추가할까?


(SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
FROM ONLINE_SALE AS N
WHERE SALES_DATE LIKE '2022-03%'
UNION
SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, NULL AS USER_ID, SALES_AMOUNT
FROM OFFLINE_SALE AS F
WHERE SALES_DATE LIKE '2022-03%')
ORDER BY SALES_DATE, PRODUCT_ID, USER_ID
